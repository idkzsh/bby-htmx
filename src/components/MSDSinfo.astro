---
interface Props {
  batteryType: string;
  requirements: string[];
  tooltip: string;
}

const { batteryType, requirements, tooltip } = Astro.props;
---
<div class="relative text-sm mb-4 flex items-center z-100">
  For {batteryType} batteries
  <div class="ml-2">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5 text-gray-500 cursor-pointer"
      viewBox="0 0 20 20"
      fill="currentColor"
      id=`${tooltip}-infoIcon`
    >
      <path
        fill-rule="evenodd"
        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
        clip-rule="evenodd"></path>
    </svg>
    <div
      class="absolute left-0 mt-2 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 p-4 text-sm hidden z-[10001]"
      id=`${tooltip}-infoTooltip`
    >
      <p class="font-semibold">Required information:</p>
      <ul class="list-disc pl-5 mt-2 text-xs">
        {requirements.map((requirement) => (
          <li>{requirement}</li>
        ))}
      </ul>
    </div>
  </div>
</div>

<script define:vars={{ tooltip }}>
  document.addEventListener("DOMContentLoaded", function () {
    const infoIcon = document.getElementById(`${tooltip}-infoIcon`);
    const infoTooltip = document.getElementById(`${tooltip}-infoTooltip`);

    infoIcon?.addEventListener("mouseenter", function () {
      infoTooltip?.classList.remove("hidden");
    });

    infoIcon?.addEventListener("mouseleave", function () {
      infoTooltip?.classList.add("hidden");
    });
  });
</script>
